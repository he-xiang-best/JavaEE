<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hexiang.mybatis.dao.MultiTableDao">
<resultMap id="StudentWithScore" type="com.hexiang.mybatis.pojo.StudentCourseScore">
        <result property="studentName" column="name"/>
        <result property="studentSex" column="sex"/>
        <result property="courseName" column="cname"/>
        <result property="courseScore" column="score"/>
</resultMap>
    <select id="getStudentNameByCourse" resultType="java.lang.String">
        SELECT
            s.`name` as name
        FROM
            student s
        WHERE
                s.id IN (
                SELECT
                    sc.sid
                FROM
                    score sc
                WHERE
                        sc.cid = (
                        SELECT c.id FROM course c WHERE c.`name` = #{coursename} 		)
            )
    </select>
    <select id="getScoreByStudent" parameterType="com.hexiang.mybatis.pojo.Student" resultMap="StudentWithScore">

        SELECT
            st.name as name,
            st.sex as sex,
            c.name as cname,
            sc.score as score
        FROM
            (SELECT
                 s.*
             FROM
                 student s
            <where>
              <if test="name!=null" >
                s.`name` LIKE CONCAT('%',#{name},'%')
              </if>
              <if test="sex!=null" >
                  AND
                  s.sex = #{sex}
              </if>
            </where>
            ) as st
                LEFT JOIN
            score sc
            ON sc.sid = st.id
                LEFT JOIN
            course c
            ON sc.cid = c.id
        <where>
        <if test="course!=null" >
            c.`name` = #{course}
        </if>
        </where>
    </select>
    <select id="getAverageScore"   resultType="java.util.Map">
        SELECT
            c.`name` as cname,
            grade.avg as avgscore
        FROM
            course c
                LEFT JOIN ( SELECT s.cid AS gid, AVG( s.score ) AS avg FROM score s GROUP BY s.cid ) AS grade ON c.id = grade.gid
        order by avgscore desc
    </select>

</mapper>
